1
00:00:00,100 --> 00:00:04,010
The solution to this question is ListPreference. When the setting

2
00:00:04,010 --> 00:00:06,070
is tapped, it presents a list of choices as a

3
00:00:06,070 --> 00:00:09,470
dialogue. When a user selects an option, it's saved into

4
00:00:09,470 --> 00:00:12,645
Shared Preferences. Here are the steps to do this. Within

5
00:00:12,645 --> 00:00:16,190
the pref_general.xml file we add a list preference. We give

6
00:00:16,190 --> 00:00:18,970
it a title, and this maps to the string temperature

7
00:00:18,970 --> 00:00:21,770
units. We also need to give it a key for

8
00:00:21,770 --> 00:00:25,600
the shared preferences. And so we specify that to be units.

9
00:00:25,600 --> 00:00:28,310
If there is no value in shared preferences, then it

10
00:00:28,310 --> 00:00:31,950
falls back to a default value of metric. The preference

11
00:00:31,950 --> 00:00:34,870
also wants to know the list of all possible values

12
00:00:34,870 --> 00:00:38,370
here. The two possible values are metric or imperial. So we

13
00:00:38,370 --> 00:00:41,580
pass those in as an array, into entry values. Now

14
00:00:41,580 --> 00:00:44,430
these are just constants for use within the logic of our

15
00:00:44,430 --> 00:00:47,600
app, these are not the user visible strings. So we

16
00:00:47,600 --> 00:00:50,880
need to create entries which is an array of user visible

17
00:00:50,880 --> 00:00:54,230
strings that maps to each one of these possible values. To

18
00:00:54,230 --> 00:00:57,460
have the temperature unit preference show up in the settings activity,

19
00:00:57,460 --> 00:00:59,970
we modify the on create method. We add this line of

20
00:00:59,970 --> 00:01:02,640
code for the temperature units setting. When the user makes a

21
00:01:02,640 --> 00:01:05,489
selection in the dialog, we set the preference summary to be

22
00:01:05,489 --> 00:01:09,570
the new value of either metric or imperial. Here, when we

23
00:01:09,570 --> 00:01:13,110
receive a high and low temperature, we read from shared preferences

24
00:01:13,110 --> 00:01:16,200
to know whether the temperature should be converted to imperial units or

25
00:01:16,200 --> 00:01:20,220
left as metric. Then we return the formatted string for display in

26
00:01:20,220 --> 00:01:23,810
the UI. That completes the code for saving the temperature unit setting.
