1
00:00:00,640 --> 00:00:02,710
If an app updates in the background, but no one

2
00:00:02,710 --> 00:00:06,060
opens it to find out, did it really happen? Notification

3
00:00:06,060 --> 00:00:09,040
started off as a convenient way to notify users of

4
00:00:09,040 --> 00:00:12,780
background updates. But they've grown to become a powerful standardized shortcut

5
00:00:12,780 --> 00:00:15,340
to interact directly with apps in a light weight way.

6
00:00:15,340 --> 00:00:19,080
Starting in Jelly Bean it was possible to expand notifications, making

7
00:00:19,080 --> 00:00:22,230
them larger and containing more information. That also introduced the

8
00:00:22,230 --> 00:00:25,730
concept of the rich notification, which is able to include actions

9
00:00:25,730 --> 00:00:27,740
like these, to be performed on the data

10
00:00:27,740 --> 00:00:31,390
included within the notification. This speeds up interaction and

11
00:00:31,390 --> 00:00:35,060
helps users streamline their notification triage experience. As a

12
00:00:35,060 --> 00:00:38,890
standardized UI designed specifically for conveying timely information in

13
00:00:38,890 --> 00:00:42,252
limited screen space. Notifications were the obvious mechanism

14
00:00:42,252 --> 00:00:44,800
to use, when Android expanded in to wearables with

15
00:00:44,800 --> 00:00:48,040
Android Wear. Suddenly those rich notifications that you designed

16
00:00:48,040 --> 00:00:51,240
for phones and tablets make your app wearable compatible,

17
00:00:51,240 --> 00:00:54,630
for free. Don't overdo it though, there's a fine line between

18
00:00:54,630 --> 00:00:57,650
useful and spammy. And it's only a couple of clicks for a

19
00:00:57,650 --> 00:00:59,630
user to disable your app's notifications

20
00:00:59,630 --> 00:01:01,450
permanently. So check out the instruction

21
00:01:01,450 --> 00:01:05,030
that's below for links to the design guide in creating good notifications.
