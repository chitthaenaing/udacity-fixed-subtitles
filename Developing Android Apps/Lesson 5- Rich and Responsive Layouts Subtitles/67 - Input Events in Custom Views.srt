1
00:00:00,650 --> 00:00:02,960
The final step in your custom view creation

2
00:00:02,960 --> 00:00:05,860
is adding interactivity. You can listen for user

3
00:00:05,860 --> 00:00:08,790
input events including key presses, trackball movement, and

4
00:00:08,790 --> 00:00:12,570
most importantly, screen touch events, all by overriding the

5
00:00:12,570 --> 00:00:15,950
corresponding event handlers. Android supports tracking of up

6
00:00:15,950 --> 00:00:18,570
to 11 individual contact points in what we

7
00:00:18,570 --> 00:00:21,710
like to call, jazz hands mode which enables

8
00:00:21,710 --> 00:00:25,550
you to complete complex and multi-finger interaction models. Now,

9
00:00:25,550 --> 00:00:28,400
there's really no interaction required for a wind gauge, but

10
00:00:28,400 --> 00:00:31,130
you can find out more about handling input events by checking

11
00:00:31,130 --> 00:00:34,170
the motion event docs or the developer guide describing how to

12
00:00:34,170 --> 00:00:37,890
create your own, fully interactive custom views, both from the [UNKNOWN]

13
00:00:37,890 --> 00:00:41,110
below. Now, be careful not to let this new found power

14
00:00:41,110 --> 00:00:44,220
go to your head. By definition, your users will have never

15
00:00:44,220 --> 00:00:47,900
encountered your brand spanking new control. So learning how to use

16
00:00:47,900 --> 00:00:50,550
it is going to add friction to the use of your app.

17
00:00:50,550 --> 00:00:53,650
At the very least, it should behave consistently with the rest of the system

18
00:00:53,650 --> 00:00:55,310
and you should avoid creating your own

19
00:00:55,310 --> 00:00:58,680
versions of system controls. If it looks kind of

20
00:00:58,680 --> 00:01:03,140
like a button and works kind of like a button, you should probably just go ahead

21
00:01:03,140 --> 00:01:07,620
and use a button, but I think this non sequitur has gone on long enough.
