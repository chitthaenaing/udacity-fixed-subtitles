1
00:00:00,270 --> 00:00:03,070
In the tablet wireframes, when a list item is selected

2
00:00:03,070 --> 00:00:06,530
it shows this blue activated state background. This can be done

3
00:00:06,530 --> 00:00:08,430
by setting the background of the list item to be

4
00:00:08,430 --> 00:00:10,990
a state drawable. We can look at the documentation for the

5
00:00:10,990 --> 00:00:12,970
StateListDrawable, which is linked below.

6
00:00:12,970 --> 00:00:14,700
Essentially a StateListDrawable allows you

7
00:00:14,700 --> 00:00:18,960
to specify different drawables based on the state of the view.

8
00:00:18,960 --> 00:00:22,180
We provide you the code for the StateListDrawable. Drop it in

9
00:00:22,180 --> 00:00:25,520
by creating a drawable folder under the res directory. When set

10
00:00:25,520 --> 00:00:27,920
on the background of a list item, the touch selector will

11
00:00:27,920 --> 00:00:31,350
appear transparent by default. As seen here we just see the background

12
00:00:31,350 --> 00:00:34,080
of the activity come through. When the view is pressed then

13
00:00:34,080 --> 00:00:37,590
we see a grey background. Then when the state is activated we

14
00:00:37,590 --> 00:00:40,620
see a blue background. This indicates that it's the selected item

15
00:00:40,620 --> 00:00:44,200
into pay mode. In the list item layout, we set the background

16
00:00:44,200 --> 00:00:47,190
to be this drawable touch selector. We also did the same

17
00:00:47,190 --> 00:00:50,600
for the today layout. In the touch selector file, we also see

18
00:00:50,600 --> 00:00:54,010
that we have some colors defined here. That Android color notation

19
00:00:54,010 --> 00:00:57,336
is for a framework defined color. Our colors are in the colors.xml

20
00:00:57,336 --> 00:01:00,770
file. This is located under the values folder. This us useful

21
00:01:00,770 --> 00:01:03,610
if you need to reference colors multiple times in your app. As

22
00:01:03,610 --> 00:01:06,650
a hint, to make a list item show its activated state,

23
00:01:06,650 --> 00:01:10,160
you can look at the documentation for the XML attribute choice mode

24
00:01:10,160 --> 00:01:13,140
for the list view. Once you find the right attribute, you'll realize

25
00:01:13,140 --> 00:01:16,480
that you want different behavior for one pane versus two pane mode.

26
00:01:16,480 --> 00:01:18,820
While you could change the behavior programmatically in the Java

27
00:01:18,820 --> 00:01:21,610
code, we'd like you to do it purely via the resource

28
00:01:21,610 --> 00:01:24,550
XML files using a style. Read this doc to learn

29
00:01:24,550 --> 00:01:27,220
about how styles can be defined in XML and use what

30
00:01:27,220 --> 00:01:30,880
you learned earlier about defining alternative resources for different sized

31
00:01:30,880 --> 00:01:33,950
devices. In general, styles are a way that you can group

32
00:01:33,950 --> 00:01:37,320
together attributes for a view. For example, these text attributes

33
00:01:37,320 --> 00:01:41,607
are replaced by this style CodeFont. The CodeFont styles is defined

34
00:01:41,607 --> 00:01:44,710
in the styles.xml file, located in the values folder.

35
00:01:44,710 --> 00:01:48,610
You can also have styles inherent other styles by specifying

36
00:01:48,610 --> 00:01:51,290
the parent. There are a couple other examples that you

37
00:01:51,290 --> 00:01:53,350
can check out on this page. This is what the

38
00:01:53,350 --> 00:01:55,280
app should look like when you're done. The two

39
00:01:55,280 --> 00:01:57,950
pane mode shows the pressed and activated state. On the

40
00:01:57,950 --> 00:02:00,890
web pane mode, we see just the press state, because

41
00:02:00,890 --> 00:02:03,400
tapping on an item brings you to the details screen.
