1
00:00:00,140 --> 00:00:03,920
To build up this list item we created a horizontal linear layout with three

2
00:00:03,920 --> 00:00:08,470
children. The first child is an image view. The second child is a vertical

3
00:00:08,470 --> 00:00:11,980
linear layout composed of two text views stacked on top of each other.

4
00:00:11,980 --> 00:00:15,200
The third child is the same. It's a vertical linear layout composed of

5
00:00:15,200 --> 00:00:17,480
the two temperature text views stacked on top of each other.

6
00:00:17,480 --> 00:00:20,370
Now you might be wondering why we didn't use a relative layout.

7
00:00:20,370 --> 00:00:24,354
Because that would give us less layers of hierarchy. Well, relative layouts

8
00:00:24,354 --> 00:00:29,100
are good if you want to specify that one view should be to the right of another,

9
00:00:29,100 --> 00:00:33,545
or on top of another view. Relative layouts are also good if you want a view to

10
00:00:33,545 --> 00:00:37,923
be aligned to the parents left, top, right or bottom. But it's harder in this

11
00:00:37,923 --> 00:00:42,042
case to center these two text views within the vertical height allocated by this

12
00:00:42,042 --> 00:00:46,190
image view. It's easier with the linear layout here and here, so if the image

13
00:00:46,190 --> 00:00:50,140
was any taller, these two text views would still stay vertically centered. And

14
00:00:50,140 --> 00:00:53,860
this is what it looks like in the Device Preview within Android Studio.

15
00:00:53,860 --> 00:00:56,530
I want to point out one thing about this horizontal linear layout,

16
00:00:56,530 --> 00:00:59,880
which has three children. The image view, the vertical linear layout, and

17
00:00:59,880 --> 00:01:04,483
the other vertical linear layout. The second child actually has a width of zero

18
00:01:04,483 --> 00:01:09,110
DP but a weight of one. That means that any horizontal space that's not taken up

19
00:01:09,110 --> 00:01:14,470
by other children will be distributed among views that have assigned weights. So

20
00:01:14,470 --> 00:01:18,430
if we look at this third child, it has a width of wrap content and

21
00:01:18,430 --> 00:01:21,000
a weight of zero. If we gave it a weight of one,

22
00:01:21,000 --> 00:01:25,070
then it would stretch out like this. Basically the icon is a fixed width, and

23
00:01:25,070 --> 00:01:28,560
then the remaining horizontal space is divided among these two children.

24
00:01:28,560 --> 00:01:31,970
Since they both have a weight one, it's distributed equally. But if you look at

25
00:01:31,970 --> 00:01:35,840
the wire frames, these temperature views are actually aligned to the right. So

26
00:01:35,840 --> 00:01:39,930
all we need is for the width to be wrap content, and for the weight to be zero.

27
00:01:39,930 --> 00:01:43,690
Then any remaining horizontal space will be assigned to this middle element,

28
00:01:43,690 --> 00:01:46,480
with a weight of one. And this is the code for the xml layout.

29
00:01:46,480 --> 00:01:50,770
We have a linear layout in horizontal orientation. The width is match parent to

30
00:01:50,770 --> 00:01:54,590
match the width of the screen, and each list item has wrap content on its

31
00:01:54,590 --> 00:01:58,230
height. But it does have a minimum height at least of this attribute,

32
00:01:58,230 --> 00:02:02,140
list preferred item height. We specify gravity to be center vertical so that

33
00:02:02,140 --> 00:02:05,790
all of its children are vertically centered within it. We also specify a little

34
00:02:05,790 --> 00:02:10,120
bit of padding. Inside of it, we add an image view, which has wrap content for

35
00:02:10,120 --> 00:02:14,630
height and width. And we specify the source as this placeholder drawable.

36
00:02:14,630 --> 00:02:17,720
Next we have the vertical linear layout, where the width is zero DP and

37
00:02:17,720 --> 00:02:21,643
the weight is one. We specify a little bit of padding between this view and

38
00:02:21,643 --> 00:02:24,060
the icon beside it. Within the linear layout,

39
00:02:24,060 --> 00:02:28,390
we have the date_textview as well as the forecast_textview. Beside that,

40
00:02:28,390 --> 00:02:31,930
we have another vertical linear layout with the high temperature_textview and

41
00:02:31,930 --> 00:02:34,090
the low temperature_textview. And that's it.
