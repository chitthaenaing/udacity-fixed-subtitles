1
00:00:00,310 --> 00:00:05,250
All right. Let's get serious now. We need to move to using a real task to fetch

2
00:00:05,250 --> 00:00:09,830
the weather. After all, weather is serious business. Let's

3
00:00:09,830 --> 00:00:13,130
create a separate FetchWeatherTask to populate our content provider

4
00:00:13,130 --> 00:00:16,420
database. And we'll start by moving our existing

5
00:00:16,420 --> 00:00:18,860
task over to this new one. Wow. It's good

6
00:00:18,860 --> 00:00:21,470
to get that big task out of ForecastFragment. And

7
00:00:21,470 --> 00:00:24,790
we're going to change the parameters to string void, void.

8
00:00:25,970 --> 00:00:30,110
Oh, we've got a lot of compile errors to fix. That's okay. For

9
00:00:30,110 --> 00:00:33,770
now, we're going to delete everything except for the do in background part of

10
00:00:33,770 --> 00:00:38,390
the async task. Let's give it a constructor and pass in a context.

11
00:00:40,335 --> 00:00:46,399
[NOISE] In doing background, let's save off the location

12
00:00:46,399 --> 00:00:52,348
query as a string to make the code easier to understand.

13
00:00:52,348 --> 00:00:55,669
And for fun, let's fetch the maximum 14 days of

14
00:00:55,669 --> 00:00:59,555
forecast data. Since we temporarily deleted get weather data from JSON,

15
00:00:59,555 --> 00:01:03,060
we can remove from the try catch at the bottom. We're

16
00:01:03,060 --> 00:01:06,000
going to look for lots of additional data from the openweather API.

17
00:01:08,060 --> 00:01:10,590
To make this easy, here are the strings we'll

18
00:01:10,590 --> 00:01:13,840
use. We'll also get the city name, the latitude, and

19
00:01:13,840 --> 00:01:17,090
longitude returned by openweather. Now, we do have to wrap

20
00:01:17,090 --> 00:01:19,580
this in a try, in order to make sure that

21
00:01:19,580 --> 00:01:22,900
we handle the exception. Alright. Now we've handled the

22
00:01:22,900 --> 00:01:25,850
exceptions so everything compiles. And hey look, we've got the

23
00:01:25,850 --> 00:01:30,860
city name and coordinates. Hm, we've now gotten the location

24
00:01:30,860 --> 00:01:33,690
that we can use to insert things into the database.

25
00:01:33,690 --> 00:01:37,810
And we haven't done this in a while, so it's time for a programming exercise

26
00:01:37,810 --> 00:01:40,140
but before we can do that let's actually

27
00:01:40,140 --> 00:01:41,940
make sure that your app can really compile.

28
00:01:44,460 --> 00:01:47,750
Let's go back to Forecast Fragment, and take a

29
00:01:47,750 --> 00:01:51,370
look at how Fetch Weather Task is working. One

30
00:01:51,370 --> 00:01:53,230
is that Fetch Weather Task is going to require that

31
00:01:53,230 --> 00:01:56,310
we get an activity or some other context, and pass

32
00:01:56,310 --> 00:01:58,900
that in there. Another thing we can do is,

33
00:01:58,900 --> 00:02:02,970
remove these pesky shared preferences. And there we have

34
00:02:02,970 --> 00:02:05,170
it, a utility function that gets us our preferred

35
00:02:05,170 --> 00:02:09,949
location. Alright, so now, we're ready to run the applications

36
00:02:09,949 --> 00:02:14,400
we can actually do the next exercise. Once again, we're going

37
00:02:14,400 --> 00:02:17,590
to be calling in to our very new fetch weather task,

38
00:02:17,590 --> 00:02:19,900
but it's not going to do anything but try and read some

39
00:02:19,900 --> 00:02:24,414
Jason. So we want to make it do something beyond that. [SOUND]
