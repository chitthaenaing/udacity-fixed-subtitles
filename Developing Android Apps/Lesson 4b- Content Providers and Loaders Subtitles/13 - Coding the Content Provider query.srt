1
00:00:00,080 --> 00:00:03,130
Let's continue coding our content provider. Query will be

2
00:00:03,130 --> 00:00:06,250
the most complex of the required content provider methods.

3
00:00:07,280 --> 00:00:09,730
We begin with the bones of the query operation.

4
00:00:10,810 --> 00:00:13,600
We use our SURI matcher object once again to

5
00:00:13,600 --> 00:00:16,149
switch on the type of URI. This is the

6
00:00:16,149 --> 00:00:18,050
only function where we will have to fill out

7
00:00:18,050 --> 00:00:21,540
every type of URI in the content provider. Several

8
00:00:21,540 --> 00:00:25,300
of them are used for querying only. We'll implement

9
00:00:25,300 --> 00:00:29,060
the basic weather query first. For this query, we

10
00:00:29,060 --> 00:00:30,900
just pass through all of the parameters to the

11
00:00:30,900 --> 00:00:34,540
database. Pretty simple stuff. Let's fix these parameters so

12
00:00:34,540 --> 00:00:36,760
they make some sense. So the strings here is

13
00:00:36,760 --> 00:00:40,650
actually a projection. S is a selection. The next

14
00:00:40,650 --> 00:00:43,970
array is selectionArgs. In the last string is sort

15
00:00:43,970 --> 00:00:47,710
order that matches a lot better. At the bottom

16
00:00:47,710 --> 00:00:50,480
of the function, we're going to set the notification

17
00:00:50,480 --> 00:00:54,710
URI for our cursor to the one that was passed into the function.

18
00:00:54,710 --> 00:00:59,790
This causes the cursor to register a content observer. To watch for changes that

19
00:00:59,790 --> 00:01:05,830
happen to that URI and any of its descendents. By descendents

20
00:01:05,830 --> 00:01:10,610
I mean any URI that begins with this path. But, we still need to test this.
