1
00:00:00,920 --> 00:00:03,860
All right, you're done. Let's go look at the

2
00:00:03,860 --> 00:00:06,520
solution. Where we left off last time as you can

3
00:00:06,520 --> 00:00:10,316
see we have two empty queries for LOCATION_ID and

4
00:00:10,316 --> 00:00:13,390
LOCATION. These two queries look a lot like the queries

5
00:00:13,390 --> 00:00:17,191
we have for weather. For LOCATION_ID this looks almost

6
00:00:17,191 --> 00:00:20,430
exactly like what we do for weather. Except we use

7
00:00:20,430 --> 00:00:23,090
a hard coded query, rather than relying on the one

8
00:00:23,090 --> 00:00:25,920
passed into the function. Since we know that this is

9
00:00:25,920 --> 00:00:28,800
always going to be a long integer value, it is

10
00:00:28,800 --> 00:00:32,439
easy to just build the value into the query string. Location,

11
00:00:32,439 --> 00:00:35,950
on the other hand, looks almost exactly like the weather

12
00:00:35,950 --> 00:00:39,580
query. We just pass all the parameters into the database. You

13
00:00:39,580 --> 00:00:42,540
didn't think you're going to get away without testing, did you?

14
00:00:42,540 --> 00:00:45,370
Don't worry, it's really easy to add this test. It turns

15
00:00:45,370 --> 00:00:48,490
out that calling our function within the provider, works almost

16
00:00:48,490 --> 00:00:50,670
exactly the same as the way we did the weather table.

17
00:00:51,680 --> 00:00:55,241
All we have to do is replace WeatherEntry.CONTENT_URI with

18
00:00:55,241 --> 00:01:00,445
LocationEntry.CONTENT_URI. And of course we still have to delete the

19
00:01:00,445 --> 00:01:03,160
two columns that we can't support. Now that will actually

20
00:01:03,160 --> 00:01:05,379
work. So, let's test that to make sure that works.

21
00:01:06,620 --> 00:01:10,010
And our test passed, as expected. The interesting thing about

22
00:01:10,010 --> 00:01:12,170
this test is that it's just only testing the first

23
00:01:12,170 --> 00:01:14,490
query and it just happens to work because we deleted

24
00:01:14,490 --> 00:01:16,890
the database before the start. It'd be much more interesting

25
00:01:16,890 --> 00:01:19,950
to query for the row that we just inserted. And this will test the

26
00:01:19,950 --> 00:01:25,450
other query. Now, let's run the test again. And those also passed. So, we have

27
00:01:25,450 --> 00:01:26,870
some of our queries from our content

28
00:01:26,870 --> 00:01:29,800
provider functioning. But, unfortunately, we still have

29
00:01:29,800 --> 00:01:31,140
to do some of the more complicated

30
00:01:31,140 --> 00:01:33,680
things in the provider. Let's talk about joins.
